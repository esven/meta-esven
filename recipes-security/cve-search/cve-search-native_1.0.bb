DESCRIPTION = "a tool to perform local searches for known vulnerabilities "
AUTHOR = ""
HOMEPAGE = "https://github.com/cve-search/cve-search"
LICENSE = "BSD"
LIC_FILES_CHKSUM = "file://README.md;startline=273;endline=280;md5=59530bdf33659b29e73d4adb9f9f6552"
SRCREV = "${AUTOREV}"
PR = "r0"

SRC_URI = "git://github.com/cve-search/cve-search.git;protocol=https;branch=master \
	file://fix_ssl_and_unicode_issue.patch \
	"

S = "${WORKDIR}/git"

inherit native python3native

STARTMONGODB ??= "0"
MONGODB_SERVER ??= "127.0.0.1"
MONGODB_PORT ??= "27017"
MONGODB_NAME ??= "cvedb"
REDIS_SERVER ??= "127.0.0.1"
REDIS_PORT ??= "6379"
REDIS_VENDORSDB ??= "10"
REDIS_NOTIFICATIONSDB ??= "11"
REDIS_REFDB ??= "12"

do_configure[noexec] = "1"
do_compile[noexec] = "1"

do_install() {
	install -d ${D}${exec_prefix}
	cp -rvf ${S}/bin ${D}${exec_prefix}
	cp -rvf ${S}/sbin ${D}${exec_prefix}
	cp -rvf ${S}/lib ${D}${exec_prefix}
	create_wrapper ${D}${sbindir}/db_updater.py PYTHONPATH='${STAGING_DIR_HOST}/${PYTHON_SITEPACKAGES_DIR}'
	create_wrapper ${D}${sbindir}/db_mgmt.py PYTHONPATH='${STAGING_DIR_HOST}/${PYTHON_SITEPACKAGES_DIR}'
	create_wrapper ${D}${sbindir}/db_mgmt_cpe_dictionary.py PYTHONPATH='${STAGING_DIR_HOST}/${PYTHON_SITEPACKAGES_DIR}'
	create_wrapper ${D}${bindir}/search.py PYTHONPATH='${STAGING_DIR_HOST}/${PYTHON_SITEPACKAGES_DIR}'
}

PACKAGES = "${PN}"

FILES_${PN} = "${sbindir} ${sbindir} ${libdir}"

DEPENDS = "python3-native mongodb-native redis-native ${PYTHON3_DEPENDENCIES}"

PYTHON3_DEPENDENCIES = " \
        python3-pymongo-native \
        python3-whoosh-native \
        python3-redis-native \
        python3-dateutil-native \
        python3-flask-native \
        python3-flask-login-native \
        python3-flask-pymongo-native \
        python3-tornado-native \
        python3-passlib-native \
        python3-xlrd-native \
        python3-lxml-native \
        python3-feedformatter-native \
        python3-six-native \
        python3-pymisp-native \
        python3-pytz-native \
        "

do_start_mongodb() {
	${STAGING_BINDIR_NATIVE}/mongod \
	--port ${MONGODB_PORT} \
	--bind_ip ${MONGODB_SERVER} \
	--pidfilepath ${TMPDIR}/mongodb.pid \
	--noauth --fork --logappend \
	--logpath ${TMPDIR}/log/mongodb.log \
	--dbpath ${TMPDIR}/mongodb-data
}
do_start_mongodb[depends] = "mongodb-native:do_populate_sysroot"
do_start_mongodb[dirs] = "${TMPDIR}/mongodb-data ${TMPDIR}/log"
do_start_mongodb[nostamp] = "1"

do_start_redisdb() {
	${STAGING_BINDIR_NATIVE}/redis-server \
	--port ${REDIS_PORT} \
	--pidfile ${TMPDIR}/redis-server.pid \
	--bind ${REDIS_SERVER} \
	--dir ${TMPDIR}/redis-data \
	--daemonize yes	
}
do_start_redisdb[depends] = "redis-native:do_populate_sysroot"
do_start_redisdb[nostamp] = "1"
do_start_redisdb[dirs] = "${TMPDIR}/redis-data"

do_initialize_db() {
	${STAGING_SBINDIR_NATIVE}/db_mgmt.py -p -v
	${STAGING_SBINDIR_NATIVE}/db_mgmt_cpe_dictionary.py
}

do_update_db() {
	${STAGING_SBINDIR_NATIVE}/db_updater.py -v
}

addtask start_redisdb before do_initialize_db before do_update_db
addtask start_mongodb before do_initialize_db before do_update_db
addtask initialize_db after do_populate_sysroot after do_initialize_db
addtask update_db after do_initialize_db after do_start_mongodb after do_start_redisdb
